/* ----------------------------------------------------------------------- *//**

@file porter_stemmer.sql_in

@brief The Porter Stemmer. Pre-processing step in NLP pipelines.

@author PL/C Wrapper written by Srivatsan Ramanujam<sramanujam@pivotal.io> 
        porting original inventor Martin Porter's code 
        from https://tartarus.org/martin/PorterStemmer/c_thread_safe.txt
@date 12 Aug 2014

 *//* ----------------------------------------------------------------------- */


/**
@addtogroup grp_stem_token

@brief Apply Porter Stemmer on a token and return the root word

<div class="toc"><b>Contents</b>
<ul>
<li class="level1"><a href="#stem_token_syntax">Syntax</a>
<li class="level1"><a href="#stem_token_usage">Usage</a>
<li class="level1"><a href="#stem_token_example">Example</a>
</ul>
</div>

@about
A row function, that stems a token and returns the root word according to
Porter's algorithm

@anchor stem_token_syntax
@par Syntax
<pre class="syntax">
FUNCTION stem_token(token text)
RETURNS text;
</pre>

@param token A word to be stemmed

@returns stemmed/root form of the input token

@anchor stem_token_usage
@usage
Identifying a root form of a token is a common step in many natural language
processing tasks. Porter Stemmer is an algorithm that identifies a root form
of any given word in English

@anchor stem_token_example
@examp
@verbatim
user=# SELECT stem_token('pencils');
 stem_token 
----------------
 pencil
(1 row)

user=# SELECT stem_token('running');
 stem_token 
----------------
 run
(1 row)
@endverbatim

@sa grp_stem_token_arr

*/
CREATE OR REPLACE FUNCTION PDLTOOLS_SCHEMA.stem_token(token text)
RETURNS text
AS 'MODULE_PATHNAME','plc_stem_token'
LANGUAGE C IMMUTABLE STRICT;

CREATE OR REPLACE FUNCTION PDLTOOLS_SCHEMA.stem_token()
RETURNS VARCHAR
IMMUTABLE
LANGUAGE SQL
AS
$$
SELECT $ABC$
stem_token: Apply Porter Stemmer on a token and return the root word.

A row function, that stems a token and returns the root word according to
Porter's algorithm

Synopsis
========
PDLTOOLS_SCHEMA.stem_token(token text)
RETURNS text

token - A word to be stemmed

Usage
=====
Returns the stemmed/root form of the token in the input.

Identifying the root form of a token is a common step in many natural language
processing tasks. The Porter Stemmer is an algorithm that identifies a root
form of any given word in English.

Example
=======
SELECT PDLTOOLS_SCHEMA.stem_token('running');
 stem_token 
----------------
 run
(1 row)

See also: stem_token_arr
$ABC$::VARCHAR;
$$;

-----------------------------------------------------------------------------------

/**
@addtogroup grp_stem_token_arr

@brief Apply Porter Stemmer on an array of tokens and return an array of root
words

<div class="toc"><b>Contents</b>
<ul>
<li class="level1"><a href="#stem_token_arr_syntax">Syntax</a>
<li class="level1"><a href="#stem_token_arr_usage">Usage</a>
<li class="level1"><a href="#stem_token_arr_example">Example</a>
</ul>
</div>

@about
A row function, that stems each word from an array of tokens, returning an
array of the root words according to Porter's algorithm.

@anchor stem_token_arr_syntax
@par Syntax
<pre class="syntax">
FUNCTION stem_token_arr(token text[])
RETURNS text[];
</pre>

@param token An array of words to be stemmed

@returns An array with stemmed/root forms of each of the tokens in the input.

@anchor stem_token_arr_usage
@usage
Identifying the root form of a token is a common step in many natural language
processing tasks. Porter Stemmer is an algorithm that identifies a root form
of any given word in English. In this function it acts separately on each of
the tokens given to it in an input array.

@anchor stem_token_arr_example
@examp
@verbatim
select stem_token_arr(ARRAY['pencils','running','walking']);
 stem_token_arr 
--------------------
 {pencil,run,walk}
(1 row)
@endverbatim

@sa grp_stem_token

*/
CREATE OR REPLACE FUNCTION PDLTOOLS_SCHEMA.stem_token_arr(token_arr text[])
RETURNS text[]
AS 'MODULE_PATHNAME','plc_stem_token_arr'
LANGUAGE C IMMUTABLE STRICT;

-----------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION PDLTOOLS_SCHEMA.stem_token_arr()
RETURNS VARCHAR
IMMUTABLE
LANGUAGE SQL
AS
$$
SELECT $ABC$
stem_token_arr: Apply Porter Stemmer on an array of tokens and return an
array of root words.

A row function, that stems each word from an array of tokens, returning an
array of the root words according to Porter's algorithm.

For full usage instructions, run "PDLTOOLS_SCHEMA.stem_token_arr('usage')".
$ABC$::VARCHAR;
$$;

CREATE OR REPLACE FUNCTION PDLTOOLS_SCHEMA.stem_token_arr(option VARCHAR)
RETURNS VARCHAR
IMMUTABLE
LANGUAGE SQL
AS
$$
SELECT CASE WHEN $1!='usage' THEN PDLTOOLS_SCHEMA.stem_token_arr() ELSE
$ABC$
stem_token_arr: Apply Porter Stemmer on an array of tokens and return an
array of root words.

A row function, that stems each word from an array of tokens, returning an
array of the root words according to Porter's algorithm.

Synopsis
========
PDLTOOLS_SCHEMA.stem_token_arr(token text[])
RETURNS text[]

token - An array of words to be stemmed

Usage
=====
Returns An array with stemmed/root forms of each of the tokens in the input.

Identifying the root form of a token is a common step in many natural language
processing tasks. The Porter Stemmer is an algorithm that identifies a root
form of any given word in English. In this function it acts separately on each
of the tokens given to it in an input array.

Example
=======
SELECT PDLTOOLS_SCHEMA.stem_token_arr(ARRAY['pencils','running','walking']);
 stem_token_arr 
--------------------
 {pencil,run,walk}
(1 row)

See also: stem_token
$ABC$
END;
$$;

