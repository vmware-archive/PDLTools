/**
@mainpage
<B>PDL Tools</B> is a library of reusable tools for use by Data Scientists
and Data Engineers.

It is provided and maintained by Pivotal Data Labs, and includes tools that
facilitate Big Data analytics using the SQL command-line, when using
Pivotal's GPDB and HAWQ. <B>PDL Tools</B> includes convenience tools,
parallelized algorithms and the <B>SUgAR</B> library (enabling second-order
SQL parsing).

Please refer to [LEGAL.txt](https://github.com/pivotalsoftware/PDLTools/blob/master/LEGAL.txt) file for more information about usage rights.

Call any function without parameters (or with the single parameter
<code>'usage'</code>, as a string) for online help. Use
<code>"pdltools_version()"</code> to get the library's version number,
or <code>"version()"</code> to get component version numbers.

@note
By default, all SUgAR library objects are installed into the schema
`sugarlib` and all other PDL Tools objects are installed into the schema
`pdltools`. It is highly recommended to have both schemas on your
search path.

@defgroup grp_tools_module Tools
@{
A collection of convenience functions.

    @defgroup grp_uriutils URI Utils
    @{
        @brief A set of utilities for parsing and extracting URIs from text.

A set of utilities for parsing and extracting URIs from text.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 22 Aug 2013, wrapping functionality from the <code>uriparser</code> library [under new BSD license].)

@sa Module source file: uri_utils.sql_in.

@prereq
External library: uriparser

        @defgroup grp_uri_type uri_type (Type)
        @defgroup grp_uri_array_type uri_array_type (Type)
        @defgroup grp_parse_uri parse_uri
        @defgroup grp_extract_uri extract_uri
        @defgroup grp_parse_domain parse_domain
    @}

    @defgroup grp_editdist Edit Distance
    @{
        @brief Calculators for generalized edit distance metrics.

Implementation of Levenshtein, Demerau-Levenshtein, Optimal Alignment
and related edit distance metrics (and non-distance metrics).

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 19 Feb 2014.)

@sa Module source file: edit_distance.sql_in.

        @defgroup grp_edit_distance edit_distance
        @defgroup grp_edit_distance_unsafe edit_distance_unsafe
        @defgroup grp_levenshtein_distance levenshtein_distance
        @defgroup grp_demerau_levenshtein_distance demerau_levenshtein_distance
        @defgroup grp_optimal_alignment_distance optimal_alignment_distance
    @}

    @defgroup grp_anonymization Anonymization
    @{
        @brief Implementation of anonymization utility.

Implementation of anonymization utility.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 9 Dec 2013.)

@sa Module source file: anonymization.sql_in.

@prereq
PL/pgSQL, PL/PythonU

        @defgroup grp_create_anonymization_table create_anonymization_table
        @defgroup grp_anonymize anonymize
        @defgroup grp_deanonymize deanonymize
    @}

    @defgroup grp_sessionization Sessionization
    @{
        @brief Utility to partition event streams into sessions by timeouts and identifiers.

Utility to partition event streams into sessions by timeouts and identifiers.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 22 Aug 2013, based on code by Jin Yu.)

@sa Module source file: session.sql_in.

@prereq
PL/Perl

        @defgroup grp_session_split session_split
    @}

    @defgroup grp_sampling Sampling
    @{
        @brief A sampling utility.

Utility to perform stratified, randomized, proportional sampling and labeling.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 3 Sep 2014.)

@sa Module source file: sampling.sql_in.

@prereq
PL/Perl

        @defgroup grp_strat_partition strat_partition
        @defgroup grp_strat_sampling strat_sampling
        @defgroup grp_train_test_split train_test_split
    @}

    @defgroup grp_complexnumbers Complex Numbers
    @{
        @brief Implementation of a user-defined Complex type.

Implementation of a user-defined Complex type.

(Written by Kevin Yun Liu, 1 Apr 2012. Adapted for PDL Tools by [Srivatsan Ramanujam](mailto:sramanujam@pivotal.io).)

@sa Module source file: complex_type.sql_in.

        @defgroup grp_complex complex (Type)
    @}

    @defgroup grp_stemming Stemming
    @{
        @brief Porter stemming for NLP.

The Porter Stemmer. Pre-processing step in NLP pipelines.

(Written by [Srivatsan Ramanujam](mailto:sramanujam@pivotal.io), porting original inventor Martin Porter's code, 12 Aug 2014.)

@sa Module source file: porter_stemmer.sql_in
@prereq
PL/C
        @defgroup grp_stem_token stem_token
        @defgroup grp_stem_token_arr stem_token_arr
    @}

    @defgroup grp_prediction_metrics Prediction Metrics
    @{
        @brief A collection of metrics to gauge model accuracy.

A collection of summary statistics to gauge model accuracy based on predicted
values vs. ground-truth values.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 21 Oct 2014.)

@sa Module source file: prediction_metrics.sql_in
        @defgroup grp_mf_mae mf_mae
        @defgroup grp_mf_mape mf_mape
        @defgroup grp_mf_mpe mf_mpe
        @defgroup grp_mf_rmse mf_rmse
        @defgroup grp_mf_r2 mf_r2
        @defgroup grp_mf_adjusted_r2 mf_adjusted_r2
        @defgroup grp_mf_binary_classifier mf_binary_classifier
        @defgroup grp_mf_auc mf_auc
        @defgroup grp_mf_confusion_matrix mf_confusion_matrix
    @}

    @defgroup grp_balancing Balancing datasets
    @{
        @brief Balance a dataset for classification by re-sampling

Given a table with varying number of records for each class
label, this function will create an output table with each class label
having approximately the same number of records. This is achieved by
repeating each row of every under-represented class by a certain amount
so that the expected number of rows from the underrepresented classes equals
the total number of rows in the majority class.

(Written by [Srivatsan Ramanujam](mailto:sramanujam@pivotal.io), 14 Nov 2014.)

@sa Module source file: balance_dataset.sql_in
@prereq
PL/Python
        @defgroup grp_balance_dataset balance_dataset
    @}

	@defgroup grp_one_vs_rest_data_prep Data preparation for one-vs-rest multi-class classification
	@{
		@brief Prepare multi-class classification data to build one-vs-rest classifiers

Given a table with multi-class labels (number of classes > 2), this function will replicate
the data for building one-vs-rest classifiers.

(Written by [Gautam Muralidhar](mailto:gmuralidhar@pivotal.io), 14 Mar 2016.)

@sa Module source file: one_vs_rest_data_prep.sql_in
@prereq
PL/Python
	    @defgroup grp_one_vs_rest one_vs_rest
	@}

    @defgroup grp_grid_search Grid Search
    @{
        @brief A set of grid search functions for various algorithms.

A set of grid search functions for various algorithms.

(Written by [April Song, Srivatsan Ramanujam](mailto:asong@pivotal.io, sramanujam@pivotal.io), 19 April 2016.)

@sa Module source file: grid_search.sql_in
@prereq
PL/Python, PL/pgSQL, MADlib 1.8+
        @defgroup grp_kmeans k-Means
        @defgroup grp_elastic_net elastic_net
    @}

  @defgroup grp_genutils Generic Utilities
  @{
      @brief Collection of miscellaneous utility functions

Collection of miscellaneous utility functions.

(Started by [Jarrod Vawdrey, Esther Vasiete](mailto:jvawdrey@pivotal.io, evasiete@pivotal.io), 19 Apr 2016.)

@sa Module source file: generic_utilities.sql_in.

@prereq
PL/pgSQL, MADlib 1.8+

      @defgroup grp_multitbl_summary multitbl_summary
      @defgroup grp_array_utilities array_utilities
  @}
@}


@defgroup grp_algorithms_module Algorithms
@{
A collection of machine-learning algorithms.

    @defgroup grp_clink Complete Linkage
    @{
        @brief Implementation of complete-linkage agglomerative hierarchical clustering

	Implementation of the commonly used complete-linkage hierarchical clustering
	algorithm. It constructs a hierarchical clustering tree from bottom up by
	merging closest clusters. Complete-linkage clustering defines the distance
	between two clusters as the distance between the farthest pair of data points
	in the two clusters
	(See https://en.wikipedia.org/wiki/Complete-linkage_clustering).
	
	(Written by [Jin Yu](mailto:jyu@pivotal.io), 22 Sep 2014.)
	
	@sa Module source file: complete_linkage.sql_in.
	
	@prereq
	PL/pgSQL

        @defgroup grp_complete_linkage complete_linkage
        @defgroup grp_cut_hclust_tree cut_hclust_tree
    @}

    @defgroup grp_kdtree_and_knn KD-tree
    @{
        @brief KD-tree and its application to k-nearest neighbour search

 	Construction of a KD-tree that organizes multi-dimensional data in a binary tree 
 	(https://en.wikipedia.org/wiki/K-d_tree). The data is recursively partitioned at the 
 	median value along the dimension of maximum variance. KD-tree can be used for 
 	efficient nearest neighbour search in a low dimensional space (e.g. dimensionality < 10). 
 	The search function is intended for large-scale problems, e.g. finding nearest neighbours 
 	from millions of data points. For small- to median- scale problems, a brute-force approach 
 	that compares distances between the query point to all the data may work well enough by 
 	leveraging the parallel computation capability of the Greenplum database.

	(Written by [Jin Yu](mailto:jyu@pivotal.io), 15 May 2016.)
	
	@sa Module source file: kd_tree.sql_in.
	
	@prereq
	PL/pgSQL

        @defgroup grp_kdtree kd_tree
        @defgroup grp_kdtree_knn kdtree_knn
    @}


    @defgroup grp_pagerank_alg PageRank
    @{
        @brief PageRank algorithm

        The module implements the PageRank algorithm (https://en.wikipedia.org/wiki/PageRank).
        It measures the relative importance of each node in a directed graph based on how 
        it is connected to other nodes. 
        
        (Written by [Jin Yu](mailto:jyu@pivotal.io), 20 June 2016.)
        
        @sa Module source file: pagerank.sql_in.
  
        @prereq
        PL/pgSQL

        @defgroup grp_pagerank pagerank
    @}

    @defgroup grp_hits_alg HITS
    @{
	@brief HITS algorithm

	This function implements the HITS algorithm (https://en.wikipedia.org/wiki/HITS_algorithm).

	It measures the relative importance of each node as a Hub and as an Authority in a directed
        graph based on how it is connected to other nodes.
              - A high Hub score corresponds to being the source node for many links
              - A high Authority score corresponds to being the destination node for many links

        (Written by [Robert Bennett](mailto:rbennett@pivotal.io), 06 September 2016.)

        @sa Module source file: hits.sql_in.

        @prereq
	PL/pgSQL

        @defgroup grp_hits hits
     @}

    @defgroup grp_normalized_cut_alg Normalized Cut
    @{
        @brief Normalized cut algorithm

        The module implements the normalized cut algorithm (https://people.eecs.berkeley.edu/~malik/papers/SM-ncut.pdf).
        It cuts a graph into two disjoint sets by removing edges connecting the two sets. The optimal cut is obtained 
        by minimizing the normalized cut disassociation measure (see Shi & Malik's paper for technical details). This 
        module partitions a graph iteratively until the size of each subgraph reaches a user specified threshold. 

        (Written by [Jin Yu](mailto:jyu@pivotal.io), 2 September 2016.)

        @sa Module source file: normalized_cut.sql_in.
 
        @prereq
        PL/pgSQL, PL/R, MADlib 1.8+

        @defgroup grp_normalized_cut normalized_cut
    @}
@}

@defgroup grp_sugar_module SUgAR - Syntactic Upgrades for Analytics Routines
@{
A library of routines powered by second-order SQL parsing.

@sa Module source file: sugar.sql_in.

@prereq
MADlib (\ref grp_pvalue only)

    @defgroup grp_sugar_framework The SUgAR Framework
    @{
        @brief What SUgAR is, how to use and how to extend it.

What SUgAR is, how to use and how to extend it.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 3 Mar 2013.)

        @defgroup grp_sugar_introduction Introduction
        @defgroup grp_sugar sugar
        @defgroup grp_sugar_db sugar_db (Table)
        @defgroup grp_sugar_help_db sugar_help_db (Table)
    @}

    @defgroup grp_sugar_funcs SUgAR Pseudofunctions
    @{
        @brief The SUgAR pseudofunctions available out-of-the-box.

The SUgAR pseudofunctions available out-of-the-box.

        @defgroup grp_opat "@" (Pseudo-operator)
        @defgroup grp_zscore zscore (Pseudo-window-function)
        @defgroup grp_pvalue pvalue (Pseudo-window-function)
        @defgroup grp_normalize normalize (Pseudo-window-function)
        @defgroup grp_proportion proportion (Pseudo-window-function)
        @defgroup grp_pivot01 pivot01 (Pseudofunction)
        @defgroup grp_pivot pivot (Pseudo-aggregate)
        @defgroup grp_glob glob (Pseudofunction)
        @defgroup grp_format_glob format_glob (Pseudofunction)
    @}

    @defgroup grp_helper Helper Routines
    @{
        @brief Various convenience functions, used or useful with SUgAR.

Various convenience functions, used or useful with SUgAR.

(Written by [Michael Brand](mailto:mbrand@pivotal.io), 3 Mar 2013.)

        @defgroup grp_proportional_trans proportional_trans
        @defgroup grp_invprop_trans invprop_trans
        @defgroup grp_clamp clamp
        @defgroup grp_all_vals all_vals
        @defgroup grp_freq_vals freq_vals
        @defgroup grp_all_but_one all_but_one
        @defgroup grp_choose_any choose_any (Aggregate)
        @defgroup grp_unique_element unique_element (Aggregate)
    @}
@}

*/
